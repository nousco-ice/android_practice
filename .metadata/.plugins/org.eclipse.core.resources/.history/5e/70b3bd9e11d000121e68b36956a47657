package com.doradori.memorypower;

import java.util.ArrayList;
import java.util.Random;

import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Rect;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.View;

public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    
    
    class Shape {
    	final static int RECT = 0;
    	final static int CIRCLE = 1;
    	final static int TRIANGLE = 2;
    	
    	int what;
    	int color;
    	Rect rt;
    }
    
    class GameView extends View {

    	final static int BLANK = 0;
    	final static int PLAY = 1;
    	
    	final static int DELAY = 1500;
    	
    	int status;
    	
    	ArrayList<Shape> arShape = new ArrayList<Shape>();
    	Random Rnd = new Random();
    	Activity mParent;
    	
    	
		public GameView(Context context) {
			super(context);
			// TODO Auto-generated constructor stub
			
			mParent = (Activity)context;
			
			status = BLANK;
			//mHandler.
		}
		
		public void onDraw (Canvas canvas) {
			canvas.drawColor(Color.BLACK);
			
			if (status == BLANK) {
				return;
			}
			
			int idx;
			for (idx = 0; idx < arShape.size(); idx++) {
				Paint Pnt = new Paint();
				Pnt.setAntiAlias(true);
				Pnt.setColor(arShape.get(idx).color);
				
				Rect rt = arShape.get(idx).rt;
				
				switch (arShape.get(idx).what){
				case Shape.RECT:
					canvas.drawRect(rt, Pnt);
					break;
				case Shape.CIRCLE:
					canvas.drawCircle((float)(rt.left+rt.width()/2), (float)(rt.top+rt.height()/2), (float)(rt.width()/2), Pnt);
					break;
				case Shape.TRIANGLE:
					Path path = new Path();
					path.moveTo(rt.left+rt.width()/2, rt.top);
					path.lineTo(rt.left, rt.bottom);
					path.lineTo(rt.right, rt.bottom);
					canvas.drawPath(path, Pnt);
					break;
				}
			}
		}
		
		public boolean onTouchEvent (MotionEvent event) {
			if (event.getAction() == MotionEvent.ACTION_DOWN) {
				int sel;
				sel = FindShapeIndex((int) event.getX(), (int)event.getY());
			}
		}
		
		
    	
    }
    
}
